{"ast":null,"code":"var _jsxFileName = \"/Users/narekboshyan/Desktop/react-18/src/useLayoutEffect/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\n\n//* The purpose of useLayoutEffect is to perform immediate DOM mutations or read layout-related information before the browser has a chance to paint. It is a synchronous effect that runs after a render but before the browser updates the screen. If you perform asynchronous operations, such as API requests, within useLayoutEffect, it can lead to blocking behavior and potentially freeze the UI.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExampleComponent = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    console.log(\"useEffect - Before DOM update\");\n    document.title = `Count: ${count}`;\n    console.log(\"useEffect - After DOM update\");\n  });\n  useLayoutEffect(() => {\n    console.log(\"useLayoutEffect - Before DOM update\");\n    document.title = `Count: ${count}`;\n    console.log(\"useLayoutEffect - After DOM update\");\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n_s(ExampleComponent, \"1BTyTkeIyecJLZb+iZ3AC9HQyrg=\");\n_c = ExampleComponent;\nexport default ExampleComponent;\nvar _c;\n$RefreshReg$(_c, \"ExampleComponent\");","map":{"version":3,"names":["React","useState","useEffect","useLayoutEffect","jsxDEV","_jsxDEV","ExampleComponent","_s","count","setCount","console","log","document","title","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/narekboshyan/Desktop/react-18/src/useLayoutEffect/index.js"],"sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\n\n//* The purpose of useLayoutEffect is to perform immediate DOM mutations or read layout-related information before the browser has a chance to paint. It is a synchronous effect that runs after a render but before the browser updates the screen. If you perform asynchronous operations, such as API requests, within useLayoutEffect, it can lead to blocking behavior and potentially freeze the UI.\n\nconst ExampleComponent = () => {\n const [count, setCount] = useState(0);\n\n useEffect(() => {\n  console.log(\"useEffect - Before DOM update\");\n  document.title = `Count: ${count}`;\n  console.log(\"useEffect - After DOM update\");\n });\n\n useLayoutEffect(() => {\n  console.log(\"useLayoutEffect - Before DOM update\");\n  document.title = `Count: ${count}`;\n  console.log(\"useLayoutEffect - After DOM update\");\n });\n\n return (\n  <div>\n   <p>Count: {count}</p>\n   <button onClick={() => setCount(count + 1)}>Increment</button>\n  </div>\n );\n};\n\nexport default ExampleComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,QAAQ,OAAO;;AAEnE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACfQ,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5CC,QAAQ,CAACC,KAAK,GAAI,UAASL,KAAM,EAAC;IAClCE,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAC5C,CAAC,CAAC;EAEFR,eAAe,CAAC,MAAM;IACrBO,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClDC,QAAQ,CAACC,KAAK,GAAI,UAASL,KAAM,EAAC;IAClCE,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;EAClD,CAAC,CAAC;EAEF,oBACCN,OAAA;IAAAS,QAAA,gBACCT,OAAA;MAAAS,QAAA,GAAG,SAAO,EAACN,KAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBb,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAM,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAER,CAAC;AAACX,EAAA,CArBID,gBAAgB;AAAAc,EAAA,GAAhBd,gBAAgB;AAuBtB,eAAeA,gBAAgB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}